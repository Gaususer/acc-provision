apiVersion: v1
kind: ConfigMap
metadata:
  name: aci-containers-config
  namespace: kube-system
  labels:
    k8s-app: aci-containers
data:
  controller_config: |-
    {
        "log-level": "debug",
        "default-endpoint-group": {
            "policy-space": "demo",
            "name": "kubernetes-default|default"
        },
        "service-ip-pool": [
            {"start": "10.4.1.1", "end": "10.4.255.254"}
        ],
        "static-service-ip-pool": [
            {"start": "10.4.0.1", "end": "10.4.0.255"}
        ],
        "pod-ip-pool": [
            {"start": "10.1.0.1", "end": "10.1.255.254"}
        ],
        "node-service-ip-pool": [
            {"start": "10.6.1.1", "end": "10.6.1.254"}
        ]
    }
  host_agent_config: |-
    {
        "log-level": "debug",
        "aci-vrf": "kubernetes-vrf",
        "aci-vrf-tenant": "common",
        "service-iface": "eth2",
        "service-iface-vlan": 4003
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: aci-containers-host
  namespace: kube-system
  labels:
    k8s-app: aci-containers
spec:
  template:
    metadata:
      labels:
        name: aci-containers-host
    spec:
      hostNetwork: true
      containers:
        - name: aci-containers-host
          image: noiro/aci-containers-host
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
            - name: KUBERNETES_NODE_NAME 
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: cni-bin
              mountPath: /opt
            - name: cni-conf
              mountPath: /etc
            - name: localvar
              mountPath: /usr/local/var
            - name: config-volume
              mountPath: /usr/local/etc/aci-containers/
      restartPolicy: Always
      volumes:
        - name: cni-bin
          hostPath:
            path: /opt
        - name: cni-conf
          hostPath:
            path: /etc
        - name: localvar
          emptyDir: {}
        - name: config-volume
          configMap:
            name: aci-containers-config
            items:
              - key: host_agent_config
                path: host-agent.conf
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aci-containers-controller
  namespace: kube-system
  labels:
    k8s-app: aci-containers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: aci-containers-controller
      namespace: kube-system
      labels:
        k8s-app: aci-containers
    spec:
      hostNetwork: true
      containers:
        - name: aci-containers-controller
          image: noiro/aci-containers-controller
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/etc/aci-containers/
      volumes:
        - name: config-volume
          configMap:
            name: aci-containers-config
            items:
              - key: controller_config
                path: controller.conf
